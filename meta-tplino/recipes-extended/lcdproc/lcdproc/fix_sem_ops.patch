Index: lcdproc-0.5.6/server/drivers/hd44780-ext8bit.c
===================================================================
--- lcdproc-0.5.6.orig/server/drivers/hd44780-ext8bit.c	2010-12-27 14:32:57.000000000 +0100
+++ lcdproc-0.5.6/server/drivers/hd44780-ext8bit.c	2013-02-19 10:13:33.660340822 +0100
@@ -150,7 +150,7 @@
 
 	portControl |= p->backlight_bit;
 
-	sem_wait(semid);
+	semop_wait(semid);
 	port_out(p->port + 2, portControl ^ OUTMASK);
 	port_out(p->port, ch);
 	if (p->delayBus) p->hd44780_functions->uPause(p, 1);
@@ -186,7 +186,7 @@
 {
 	unsigned char readval;
 
-	sem_wait(semid);
+	semop_wait(semid);
 
 	// Convert the positive logic to the negative logic on the LPT port
 	port_out(p->port, ~YData & 0x00FF);
Index: lcdproc-0.5.6/server/drivers/lcd_sem.c
===================================================================
--- lcdproc-0.5.6.orig/server/drivers/lcd_sem.c	2010-12-27 14:32:57.000000000 +0100
+++ lcdproc-0.5.6/server/drivers/lcd_sem.c	2013-02-19 10:13:33.668340781 +0100
@@ -12,7 +12,7 @@
  *   getkey      returns the key for the semaphore
  *   sem_get     create the semaphore (and initialise) if one doesn't exist
  *                otherwise return its key
- *   sem_wait    wait on the semaphore
+ *   semop_wait    wait on the semaphore
  *   sem_signal  signal on the semaphore
  *   sem_remove  remove the semaphore
  *
@@ -126,7 +126,7 @@
  * \return     \c 0 on success; terminate program with code \c 1 on error.
  */
 int
-sem_wait(int sid)
+semop_wait(int sid)
 {
 	if (semop(sid, &semaphore_wait, 1) < -1) {
 		perror(SEMAPHORE);
Index: lcdproc-0.5.6/server/drivers/lcd_sem.h
===================================================================
--- lcdproc-0.5.6.orig/server/drivers/lcd_sem.h	2000-03-30 22:20:41.000000000 +0200
+++ lcdproc-0.5.6/server/drivers/lcd_sem.h	2013-02-19 10:13:33.668340781 +0100
@@ -6,7 +6,7 @@
 #define LCD_SEM_H
 
 int sem_get (void);
-int sem_wait (int sid);
+int semop_wait (int sid);
 int sem_signal (int sid);
 int sem_remove (int sid);
 
